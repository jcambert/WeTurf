@using MediatR;

@using Volo.Abp.DependencyInjection;
@using We.Bootswatch.Components.Web.BasicTheme;
@using We.Bootswatch.Components.Web.BasicTheme.Commands;
@using We.Results;
@using We.AbpExtensions
<Selector TProvider="IMenuStyleProvider" TItem="IWeMenuStyle" OnChange="OnChange"></Selector>

@code {

    private async Task OnChange(IAbpLazyServiceProvider service, IMediator mediator, IMenuStyleProvider provider, IWeMenuStyle item)
    {
        var notif = service.NotificationService();
        var res = await Result
        .Create(new ApplyMenuStyleCommand(item.Name))
        .Bind(cmd=>mediator.Send(cmd))
        .Match(r=>
        {
            notif.Success("Menu changed");
            return new NoContentResult();
        },
        r =>
        {
            notif.Error(r.Errors.JoinAsString("\n"));
            return new BadRequestResult();
        })
        ;

        
    }
}

