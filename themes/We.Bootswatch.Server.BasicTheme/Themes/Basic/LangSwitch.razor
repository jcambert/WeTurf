@using MediatR;
@using Volo.Abp.DependencyInjection;
@using We.Bootswatch.Components.Web.BasicTheme;
@using We.Bootswatch.Components.Web.BasicTheme.Commands;
@using We.Bootswatch.Components.Web.BasicTheme.Services;
@using We.Results;
<Selector TProvider="ILangProvider" TItem="ILang" OnChange="OnChange"></Selector>

@code {

    private async Task OnChange(IAbpLazyServiceProvider service, IMediator mediator, ILangProvider provider, ILang item)
    {

        // var l = (Lang)item;
        //var res1 = await mediator.Send(new ApplyLanguageCommand(l.CultureName,l.UiCultureName));

        var notif = service.NotificationService();
        var res = await Result
        .Create(new ApplyLanguageCommand(item.CultureName, item.UiCultureName))
        .Bind(cmd => mediator.Send(cmd))
        .Match(r =>
        {
            notif.Success("Language changed");
            return new NoContentResult();
        },
        r =>
        {
            notif.Error(r.Errors.JoinAsString("\n"));
            return new BadRequestResult();
        })
        ;


    }
}