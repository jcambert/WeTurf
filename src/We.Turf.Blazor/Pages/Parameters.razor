@page "/parameters"
@using Volo.Abp.AspNetCore.Components.Notifications;
@using We.Turf.Entities;
@using We.Results;
@using We.Turf.Queries;
@inject IPmuScrapAppService Scrapper;
@inject IUiNotificationService? UiNotificationService;
<Div Class="mb-3">
    @if (Parameter is not null)
    {
        <Row>
            <Fields>
                <Field ColumnSize="ColumnSize.Is3.OnDesktop">
                    <FieldLabel>Dossier de Base du scrapper</FieldLabel>
                    <TextEdit Placeholder="Dossier" @bind-Text="@Parameter.BaseScrapFolder" />
                </Field>
                <Field ColumnSize="ColumnSize.Is3.OnDesktop">
                    <FieldLabel>Dossier D'entrée</FieldLabel>
                    <TextEdit Placeholder="Dossier" @bind-Text="@Parameter.InputScrapFolder" />
                </Field>
                <Field ColumnSize="ColumnSize.Is3.OnDesktop">
                    <FieldLabel>Dossier De sortie</FieldLabel>
                    <TextEdit Placeholder="Dossier" @bind-Text="@Parameter.OutputScrapFolder" />
                </Field>
            </Fields>
        </Row>
        <Row>
            <Fields>
                <Field ColumnSize="ColumnSize.Is3.OnDesktop">
                    <FieldLabel>Fichier de Prediction</FieldLabel>
                    <TextEdit Placeholder="Nom du fichier.ext" @bind-Text="@Parameter.PredictionFilename" />
                </Field>
                <Field ColumnSize="ColumnSize.Is3.OnDesktop">
                    <FieldLabel>Fichier des resultats</FieldLabel>
                    <TextEdit Placeholder="Nom du fichier.ext" @bind-Text="@Parameter.CourseFilename" />
                </Field>
            </Fields>

        </Row>
        <Row>
            <Fields>
                <Field ColumnSize="ColumnSize.Is1.OnDesktop">
                    <Check TValue="bool" @bind-Checked="@Parameter.ScrapInFolder">Scrap dans un dossier</Check>
                </Field>
                <Field ColumnSize="ColumnSize.Is3.OnDesktop" Visibility="@InputScrapFolderMonthPatternVisibility">
                    <FieldLabel>Format du dossier d'entrée de scrap</FieldLabel>
                    <TextEdit Placeholder="MM YYYY" @bind-Text="@Parameter.InputScrapFolderMonthPattern" />
                </Field>
            </Fields>

        </Row>
        <Row>
            <Div Class="mb-3">
                <Button Color="Color.Primary" Clicked="Sauver">Sauver</Button>
            </Div>
        </Row>
    }
    </Div>

@code {
    public ParameterDto? Parameter { get; set; } = null;

    Visibility InputScrapFolderMonthPatternVisibility => !(Parameter?.ScrapInFolder) ?? true ? Visibility.Invisible : Visibility.Visible;

    protected async Task Sauver()
    {
        await Result.Create(new UpdateParameterQuery() { Parameter = Parameter })
        .Bind(q => Scrapper.UpdateParameter(q))
        .OnAsync(
            r => UiNotificationService?.Success("Les parametres ont été sauvegardés"),
            fail => UiNotificationService?.Error(fail.Errors.AsString())
        );

    }

    protected override async Task OnInitializedAsync()
    {
        await Result.Create(new GetParameterQuery())
        .Bind(q => Scrapper.GetParameter(q))
        .OnAsync(
            r => Parameter = r.Parameter,
            fail => Parameter = new()
        );
       
    }
}
