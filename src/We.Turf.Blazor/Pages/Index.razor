@page "/"
@page "/turf/{Date}"
@using System;
@using We.Turf.Entities;
@using We.Utilities;
@inherits TurfComponentBase
@inject IPmuServiceAppService pmuService;

<Div Style="background-image: linear-gradient(70deg, rgb(1, 120, 93), rgb(1, 85, 77));height:100%">
    <p>Date:@_date.ToShortDateString()</p>
    @if (_predicteds?.Count() > 0)
    {
        <CardDeck >
            
            @foreach (var courses in _predicteds.OrderBy(x => x.Reunion).ThenBy(x => x.Course).GroupBy(x => new { Reunion = x.Reunion, Course = x.Course,Hippodrome=x.Hippodrome }))
            {
                <Card Class="mb-4">
                    <CardBody>
                        <CardTitle>
                            <span>Réunion: @courses.Key.Reunion</span>
                            <span>Course: @courses.Key.Course</span>
                            <span>Hippodrome: @courses.Key.Hippodrome</span>
                            
                        </CardTitle>
                        @foreach (var course in courses)
                        {
                            <CardText>
                                Nom :@course.Nom
                                No  :@course.NumeroPmu
                                Cote:@course.Rapport
                            </CardText>
                        }
                    </CardBody>
                </Card>
            }
        </CardDeck>
    }
</Div>


@code {
    [Parameter]
    public string Date { get; set; }


    private DateOnly _date;
    private List<PredictedDto> _predicteds;
    protected override async Task OnInitializedAsync()
    {

        if (!Date.TryParseToDateOnly(out _date))
        {
            _date = DateOnlyExtensions.Now;
            Date = Date ?? _date.ToString();
        }

        var response = await pmuService.BrowsePrediction(new() { Date = _date });
        _predicteds = response.Predicteds;
    }
}
